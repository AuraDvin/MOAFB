[gd_scene load_steps=8 format=2]

[ext_resource path="res://Scripts/Player/player.tscn" type="PackedScene" id=1]
[ext_resource path="res://Assets/TileSet.tres" type="TileSet" id=2]
[ext_resource path="res://Scripts/CaveGeneration/caveGenerator.tscn" type="PackedScene" id=3]
[ext_resource path="res://Assets/crt_shader.shader" type="Shader" id=4]

[sub_resource type="GDScript" id=2]
resource_name = "Test"
script/source = "extends Node2D

signal clear_area_around_player_spawn (spawn_location)

var rng = RandomNumberGenerator.new()
var mobs_spawned = 0
var mob_scene = preload(\"res://Scripts/Enemy/enemy.tscn\")
var player_scene = preload(\"res://Scripts/Player/player.tscn\")
var door_texture = preload(\"res://Assets/door-Sheet.png\")

onready var player = $Player
#onready var nav = $Navigation2D

onready var map_cam = $Player/MapCamera
onready var map_cam_filter = $Player/MapCamera/MapFilter
onready var player_cam = $Player/Camera2D
onready var exit_door = load(\"res://Scripts/Door/door.tscn\")

func _on_Timer_timeout():
	return

func _input(_event):
	if Input.is_action_just_released(\"action_Map\"):
		map_cam.current = not map_cam.current
#		map_cam_filter.visible = not map_cam_filter.visible
		if not map_cam.current:
			player_cam.current = true


func _ready():
	var player_spawn = AutoLoad.spawnable_locations[0]
	AutoLoad.spawnable_locations.remove(0)
	spawn_player(player_spawn)
	spawn_mob(player_spawn)
	rng.randomize()
	
	place_door()
#
#	for i in range(1):
#		rng.randomize()
#		var index = rng.randi_range(0, AutoLoad.get_last_spawnable_index())
#		var spawn = AutoLoad.spawnable_locations[index]
#		while last_spawn.has(index):
#			index = rng.randi_range(0, AutoLoad.get_last_spawnable_index())
#			spawn = AutoLoad.spawnable_locations[index]
#		last_spawn.append(index)
#		spawn_mob(spawn)

##	for i in range(10):
#		rng.randomize()
#		var index = rng.randi_range(1, last_index)
#		var spawn_position = AutoLoad.spawnable_locations[index]
#		for j in last_spawn:
#			if j.x - spawn_position.x > 400:
##				AutoLoad.auraLog(\"true\")
#				mobs_spawned += 1
#				spawn_mob(spawn_position)
#				AutoLoad.spawnable_locations.remove(spawn_position)
#				break
#		if abs(old_mob_count - mobs_spawned) <= 0:
#			i -= 1
#		else:
#			old_mob_count = mobs_spawned
#		if i < 0:
#			print(i)
#	$Camera2D.set_global_position(spawn_position)

func spawn_mob(location):
	var mob = mob_scene.instance()
	call_deferred(\"add_child\", mob)
	mob.set_global_position(location)

func spawn_player(location):
	emit_signal(\"clear_area_around_player_spawn\", location)
	player.set_global_position(location)

func place_door():
	var door_position = rng.randi_range(0, AutoLoad.spawnable_locations.size())
	var location = AutoLoad.spawnable_locations[door_position]
	var door_instance = exit_door.instance()
	
	AutoLoad.spawnable_locations.erase(location)

	door_instance.connect(\"near_door\", player, \"_on_Door_near_door\")
	door_instance.connect(\"not_near_door\", player, \"_on_Door_not_near_door\")
	
	get_tree().get_root().call_deferred(\"add_child\", door_instance)
	door_instance.set_global_position(location)

#func _on_Area2D_body_entered(body):
#	var position = body.get_global_position()
#	position.y = -100
#	body.set_global_position(position)

func _on_Player_left_level():
	get_tree().get_root().get_node(\"Door\").queue_free()
	get_tree().change_scene(\"res://Assets/Scenes/End Level.tscn\")
"

[sub_resource type="ShaderMaterial" id=4]
shader = ExtResource( 4 )
shader_param/crt_curve = 0.02
shader_param/crt_scan_line_color = 0.143
shader_param/aperture_grille_rate = 1.0
shader_param/rf_switch_esque_blur = 0.571
shader_param/white_noise_rate = 0.21

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 5453.13, 359 )

[node name="tempScene" type="Node2D"]
script = SubResource( 2 )

[node name="Player" parent="." instance=ExtResource( 1 )]

[node name="MapCamera" type="Camera2D" parent="Player"]
light_mask = 3
z_index = 2
zoom = Vector2( 3, 3 )

[node name="MapFilter" type="ColorRect" parent="Player/MapCamera"]
visible = false
light_mask = 2
material = SubResource( 4 )
margin_left = -6403.0
margin_top = -3589.0
margin_right = 6501.0
margin_bottom = 3542.0

[node name="Area2D" type="Area2D" parent="."]
visible = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2( 162.875, 3198 )
shape = SubResource( 3 )

[node name="Timer" type="Timer" parent="."]
autostart = true

[node name="TileMap" type="TileMap" parent="." groups=["tilemap"]]
scale = Vector2( 4, 4 )
z_index = 1
tile_set = ExtResource( 2 )
cell_size = Vector2( 16, 16 )
collision_layer = 3
collision_mask = 3
bake_navigation = true
format = 1

[node name="caveGenerator" parent="TileMap" instance=ExtResource( 3 )]
map_width = 200
map_height = 200
noise_treshold = 0.3

[connection signal="clear_area_around_player_spawn" from="." to="TileMap/caveGenerator" method="_on_tempScene_clear_area_around_player_spawn"]
[connection signal="cursor_visibility" from="Player" to="TileMap/caveGenerator" method="_on_Player_cursor_visibility"]
[connection signal="left_level" from="Player" to="." method="_on_Player_left_level"]
[connection signal="mine_block" from="Player" to="TileMap/caveGenerator" method="_on_Player_mine_block"]
[connection signal="move_smart_cursor" from="Player" to="TileMap/caveGenerator" method="_on_Player_move_smart_cursor"]
[connection signal="body_entered" from="Area2D" to="." method="_on_Area2D_body_entered"]
[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
[connection signal="new_world_position_of_smart_cursor" from="TileMap/caveGenerator" to="Player" method="_on_caveGenerator_new_world_position_of_smart_cursor"]

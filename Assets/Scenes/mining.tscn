[gd_scene load_steps=5 format=2]

[ext_resource path="res://Scripts/Player/Player.tscn" type="PackedScene" id=1]
[ext_resource path="res://Assets/TileSet.tres" type="TileSet" id=2]
[ext_resource path="res://Scripts/CaveGeneration/caveGenerator.tscn" type="PackedScene" id=3]

[sub_resource type="GDScript" id=2]
resource_name = "Test"
script/source = "extends Node2D

var rng = RandomNumberGenerator.new()
var mobs_spawned = 0
var mob_scene = preload(\"res://Scripts/Enemy/enemy.tscn\")
var player_scene = preload(\"res://Scripts/Player/Player.tscn\")

# TODO: 
# Player spawn on proper location
# Enemy spawn on proper location


func _ready():
	var last_index = AutoLoad.get_last_spawnable_index()
	var old_mob_count = -1
	
	if last_index == null or last_index == NAN:
		AutoLoad.auraLog(\"rip\")
		return
	
	var last_spawn = [AutoLoad.spawnable_locations[0]]
	var player_spawn = AutoLoad.spawnable_locations[0]
	AutoLoad.spawnable_locations.remove(0)
	spawn_player(player_spawn)
		
#	for i in range(10):
#		rng.randomize()
#		var index = rng.randi_range(1, last_index)
#		var spawn_position = AutoLoad.spawnable_locations[index]
#		for j in last_spawn:
#			if j.x - spawn_position.x > 400:
##				AutoLoad.auraLog(\"true\")
#				mobs_spawned += 1
#				spawn_mob(spawn_position)
#				AutoLoad.spawnable_locations.remove(spawn_position)
#				break
#		if abs(old_mob_count - mobs_spawned) <= 0:
#			i -= 1
#		else:
#			old_mob_count = mobs_spawned
#		if i < 0:
#			print(i)
#	$Camera2D.set_global_position(spawn_position)
	
func spawn_mob(location):
	var mob = mob_scene.instance()
	call_deferred(\"add_child\", mob)
	mob.set_global_position(location)
	print(\"Spawned\")

func spawn_player(location):
	var player = $Player
#	call_deferred(\"add_child\", player)
	player.set_global_position(location)


func _on_caveGenerator_finished_generating():
	print (AutoLoad.spawnable_locations)
	pass # Replace with function body.
"

[node name="tempScene" type="Node2D"]
script = SubResource( 2 )

[node name="Player" parent="." instance=ExtResource( 1 )]
position = Vector2( -45, -19 )
z_index = 1

[node name="TileMap" type="TileMap" parent="."]
scale = Vector2( 3, 3 )
tile_set = ExtResource( 2 )
cell_size = Vector2( 16, 16 )
collision_layer = 3
collision_mask = 3
format = 1
tile_data = PoolIntArray( -327691, 0, 3, -327688, 0, 3, -327685, 0, 196611, -393215, 0, 4, -393214, 0, 196610, -262155, 0, 65539, -262152, 0, 65539, -262145, 0, 196611, -327679, 0, 65539, -327677, 0, 3, -196619, 0, 262148, -196618, 0, 196609, -196617, 0, 196609, -196616, 0, 262151, -196613, 0, 3, -262143, 0, 65539, -262141, 0, 65539, -131083, 0, 65539, -131080, 0, 65539, -131077, 0, 65539, -131073, 0, 196611, -196607, 0, 65539, -196605, 0, 131075, -65547, 0, 131075, -65544, 0, 131075, -65541, 0, 131075, -131071, 0, 196612, -131070, 0, 196610 )

[node name="caveGenerator" parent="TileMap" instance=ExtResource( 3 )]
map_width = 20
map_height = 20

[connection signal="mine_block" from="Player" to="TileMap/caveGenerator" method="_on_Player_mine_block"]
[connection signal="finished_generating" from="TileMap/caveGenerator" to="." method="_on_caveGenerator_finished_generating"]
